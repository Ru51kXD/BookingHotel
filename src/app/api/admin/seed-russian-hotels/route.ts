import { NextResponse } from 'next/server';
import dbManager from '@/lib/database';
import { allRussianHotelsData } from '@/lib/russianHotels';

export async function POST() {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –æ—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    const db = (dbManager as any).db;
    
    if (!db) {
      return NextResponse.json(
        { success: false, error: '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞' },
        { status: 500 }
      );
    }

    // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –æ—Ç–µ–ª–µ–π
    await new Promise((resolve, reject) => {
      db.run("DELETE FROM hotels", (err: any) => {
        if (err) reject(err);
        else resolve(null);
      });
    });

    // –í—Å—Ç–∞–≤–ª—è–µ–º —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –æ—Ç–µ–ª–∏
    const insertStmt = db.prepare(`
      INSERT INTO hotels (name, category, city, address, price_per_night, rating, image_url, description, amenities)
      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    `);

    for (const hotel of allRussianHotelsData) {
      await new Promise((resolve, reject) => {
        insertStmt.run([
          hotel.name,
          hotel.category,
          hotel.city,
          hotel.address,
          hotel.price_per_night,
          hotel.rating,
          hotel.image_url,
          hotel.description,
          hotel.amenities
        ], (err: any) => {
          if (err) reject(err);
          else resolve(null);
        });
      });
    }

    insertStmt.finalize();

    console.log(`üéâ –†–û–°–°–ò–ô–°–ö–ê–Ø –±–∞–∑–∞ –æ—Ç–µ–ª–µ–π —Å–æ–∑–¥–∞–Ω–∞! –î–æ–±–∞–≤–ª–µ–Ω–æ ${allRussianHotelsData.length} –æ—Ç–µ–ª–µ–π:`);
    console.log('üèôÔ∏è –ü–æ –≥–æ—Ä–æ–¥–∞–º:');
    console.log('  üèõÔ∏è –ú–æ—Å–∫–≤–∞: ~18 –æ—Ç–µ–ª–µ–π');
    console.log('  üè∞ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥: ~13 –æ—Ç–µ–ª–µ–π');
    console.log('  üèñÔ∏è –°–æ—á–∏: ~13 –æ—Ç–µ–ª–µ–π');
    console.log('  üïå –ö–∞–∑–∞–Ω—å: ~12 –æ—Ç–µ–ª–µ–π');
    console.log('  üè¢ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥: ~10 –æ—Ç–µ–ª–µ–π');
    console.log('  üìä + –¥—Ä—É–≥–∏–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –≥–æ—Ä–æ–¥–∞');
    console.log('‚≠ê –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: –õ—é–∫—Å, –ë–∏–∑–Ω–µ—Å, –ë—é–¥–∂–µ—Ç, –ö—É—Ä–æ—Ä—Ç, –ë—É—Ç–∏–∫');
    console.log('üí∞ –¶–µ–Ω—ã: –æ—Ç 3,000‚ÇΩ –¥–æ 45,000‚ÇΩ –∑–∞ –Ω–æ—á—å');

    return NextResponse.json({
      success: true,
      message: `–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ ${allRussianHotelsData.length} —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏ –æ—Ç–µ–ª—è–º–∏!`,
      count: allRussianHotelsData.length,
      cities: [
        '–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–°–æ—á–∏', '–ö–∞–∑–∞–Ω—å', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥',
        '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥', '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫', '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫',
        '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥', '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É', '–£—Ñ–∞', '–í–æ—Ä–æ–Ω–µ–∂'
      ]
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    return NextResponse.json(
      { 
        success: false, 
        error: '–û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
        details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      },
      { status: 500 }
    );
  }
} 